{"version":3,"sources":["components/Scholarship.js","components/ScholarshipFilters.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Scholarship","scholarship","useState","show","setShow","handleClose","capitalize","s","charAt","toUpperCase","slice","className","title","amount","Button","variant","onClick","Modal","onHide","centered","Header","closeButton","Title","Body","dangerouslySetInnerHTML","__html","information","deadline","website","target","href","rel","application_online_or_paper","essays","letters_of_recommendation","no_of_awards","texas_resident","transcripts","additional_info","Footer","YEAR_IN_SCHOOL_MAP","value","label","RESIDENCE_MAP","ESSAY_MAP","TRANSCRIPT_MAP","ScholarshipFilters","searchquery","setSearchQuery","year","transcript","essay","residency","handleResidenceChange","handleEssayChange","handleTranscriptChange","handleYearChange","handleStemChange","resetAll","htmlFor","type","id","placeholder","onChange","e","options","isClearable","name","Pagination","perPage","totalScholarships","paginate","pageNumbers","i","Math","ceil","push","class","map","number","App","scholarships","setResidency","setEssay","setTranscript","setYear","stem","setStem","currentpage","setCurrentPage","indexOfLast","indexOfFirst","scholarshipList","filter","year_in_school","includes","keywords","toLowerCase","indexOf","index","checked","preventDefault","document","getElementById","length","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DATA_URL","process","axios","get","res","ReactDOM","render","StrictMode","data"],"mappings":"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","file":"static/js/main.241a97c8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function Scholarship({ scholarship }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // Capitalize first letter of string\n  const capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\n  return (\n    <div className=\"ut-scholarship--card\">\n      <h3>{scholarship.title}</h3>\n      {scholarship.amount ? (\n        <p className=\"ut-scholarship--card-award-amt\">Award amount: ${scholarship.amount}</p>\n      ) : null}\n      <Button variant=\"primary\" onClick={handleShow}>\n        See scholarship info\n      </Button>\n\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>{scholarship.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <>\n            <div\n              dangerouslySetInnerHTML={{ __html: scholarship.information }}\n            ></div>\n            <ul>\n              {scholarship.deadline ? (\n                <li>\n                  <strong>Deadline:</strong><br/> {scholarship.deadline}\n                </li>\n              ) : null}\n              {scholarship.website ? (\n                <li>\n                  <strong>Site:</strong>{\" \"}\n                  <a\n                    target=\"_blank\"\n                    href={ scholarship.website }\n                    rel=\"noindex, nofollow, noreferrer\"\n                  ><br/>\n                    {scholarship.website}\n                  </a>\n                </li>\n              ) : null}\n              {scholarship.application_online_or_paper ? (\n                <li>\n                  <strong>Application (online or paper):</strong><br/>\n                  {capitalize(scholarship.application_online_or_paper)}\n                </li>\n              ) : null}\n              {scholarship.essays ? (\n                <li>\n                  <strong>Essay required?:</strong><br/> {capitalize(scholarship.essays)}\n                </li>\n              ) : null}\n              {scholarship.letters_of_recommendation ? (\n                <li>\n                  <strong>Letter of recommendation?:</strong><br/>\n                  {capitalize(scholarship.letters_of_recommendation)}\n                </li>\n              ) : null}\n              {scholarship.no_of_awards ? (\n                <li>\n                  <strong>Number of awards offered:</strong><br/>\n                  {scholarship.no_of_awards}\n                </li>\n              ) : null}\n              {scholarship.texas_resident ? (\n                <li>\n                  <strong>Requires Texas residency?:</strong><br/>\n                  {capitalize(scholarship.texas_resident)}\n                </li>\n              ) : null}\n              {scholarship.transcripts ? (\n                <li>\n                  <strong>Requires transcript?:</strong><br/>\n                  {capitalize(scholarship.transcripts)}\n                </li>\n              ) : null}\n              {scholarship.additional_info ? (\n                <div\n                  className=\"ut-scholarship--card-add-info\"\n                  dangerouslySetInnerHTML={{\n                    __html: scholarship.additional_info,\n                  }}\n                ></div>\n              ) : null}\n            </ul>\n            {/* { scholarship.year_in_school.map((year, index) => (\n              <div key={index}>{ year }</div>\n              ))\n            } */}\n          </>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Select from \"react-select\";\n\nconst YEAR_IN_SCHOOL_MAP = [\n  { value: \"9th\", label: \"9th grade\" },\n  { value: \"10th\", label: \"10th grade\" },\n  { value: \"11th\", label: \"11th grade\" },\n  { value: \"12th\", label: \"12th grade\" },\n];\n\nconst RESIDENCE_MAP = [\n  { value: \"yes\", label: \"Yes\" },\n  { value: \"no\", label: \"No\" },\n];\n\nconst ESSAY_MAP = [\n  { value: \"yes\", label: \"Yes\" },\n  { value: \"no\", label: \"No\" },\n];\n\nconst TRANSCRIPT_MAP = [\n  { value: \"yes\", label: \"Yes\" },\n  { value: \"no\", label: \"No\" },\n];\n\nexport default function ScholarshipFilters({ searchquery, setSearchQuery, year, transcript, essay, residency, handleResidenceChange, handleEssayChange, handleTranscriptChange, handleYearChange, handleStemChange, resetAll }) {\n  return (\n    <>\n      <form className=\"ut-scholarships--grid-form\">\n        <label htmlFor=\"searchquery\">Search</label>\n        <input\n          type=\"text\"\n          id=\"searchquery\"\n          placeholder=\"Enter search keyword\"\n          value={searchquery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n        <label htmlFor=\"residency\">Residency</label>\n        <Select\n          options={RESIDENCE_MAP}\n          isClearable={true}\n          placeholder=\"Select residency status\"\n          onChange={(value) => handleResidenceChange(value)}\n          value={residency}\n          name=\"residency\"\n        />\n        <label htmlFor=\"essay\">Essay</label>\n        <Select\n          options={ESSAY_MAP}\n          isClearable={true}\n          placeholder=\"Is an essay required?\"\n          onChange={(value) => handleEssayChange(value)}\n          value={essay}\n          name=\"essay\"\n        />\n        <label htmlFor=\"transcript\">Transript</label>\n        <Select\n          options={TRANSCRIPT_MAP}\n          isClearable={true}\n          placeholder=\"Transcript required?\"\n          onChange={(value) => handleTranscriptChange(value)}\n          value={transcript}\n          name=\"transcript\"\n        />\n        <label htmlFor=\"year\">Year in School</label>\n        <Select\n          options={YEAR_IN_SCHOOL_MAP}\n          isClearable={true}\n          placeholder=\"Select year in school\"\n          onChange={(value) => handleYearChange(value)}\n          value={year}\n          name=\"year\"\n        />\n        <label htmlFor=\"stem\">Stem scholarship</label>\n        <input\n          type=\"checkbox\"\n          id=\"stem\"\n          value=\"stem\"\n          onClick={handleStemChange}\n        />\n        <button onClick={resetAll}>Reset</button>\n      </form>\n    </>\n  );\n}\n","import React from 'react'\n\nexport default function Pagination({ perPage, totalScholarships, paginate }) {\n\n    const pageNumbers = []\n\n    for(let i = 1; i <= Math.ceil(totalScholarships / perPage); i++){\n        pageNumbers.push(i)\n    }\n\n    return (\n        <nav>\n            <ul class=\"ut-pagination\">\n                {pageNumbers.map(number => (\n                    <li key={number}>\n                        <a onClick={() => paginate(number)} href=\"!#\">{number}</a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    )\n}\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Scholarship from \"./components/Scholarship\";\nimport ScholarshipFilters from \"./components/ScholarshipFilters\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App({ scholarships }) {\n  const [residency, setResidency] = useState();\n  const [essay, setEssay] = useState();\n  const [transcript, setTranscript] = useState();\n  const [year, setYear] = useState();\n  const [stem, setStem] = useState(null);\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Pagination\n  const [currentpage, setCurrentPage] = useState(1);\n  const [perPage] = useState(10);\n\n  const indexOfLast = currentpage * perPage;\n  const indexOfFirst = indexOfLast - perPage;\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const scholarshipList = scholarships\n    .slice(indexOfFirst, indexOfLast)\n    .filter((scholarship) => (!stem ? scholarship : scholarship.stem === stem))\n    .filter((scholarship) =>\n      !residency ? scholarship : scholarship.texas_resident === residency.value\n    )\n    .filter((scholarship) =>\n      !essay ? scholarship : scholarship.essays === essay.value\n    )\n    .filter((scholarship) =>\n      !transcript ? scholarship : scholarship.transcripts === transcript.value\n    )\n    .filter((scholarship) =>\n      !year ? scholarship : scholarship.year_in_school.includes(year.value)\n    )\n    .filter(\n      (scholarship) =>\n        scholarship.keywords.toLowerCase().indexOf(searchquery) > -1\n    )\n    .map((scholarship, index) => (\n      <Scholarship key={index} scholarship={scholarship} />\n    ));\n\n  const handleResidenceChange = (value) => {\n    if (value != null) {\n      setResidency(value);\n    } else {\n      setResidency(null);\n    }\n  };\n\n  const handleEssayChange = (value) => {\n    if (value != null) {\n      setEssay(value);\n    } else {\n      setEssay(null);\n    }\n  };\n\n  const handleTranscriptChange = (value) => {\n    if (value != null) {\n      setTranscript(value);\n    } else {\n      setTranscript(null);\n    }\n  };\n\n  const handleYearChange = (value) => {\n    if (value != null) {\n      setYear(value);\n    } else {\n      setYear(null);\n    }\n  };\n\n  const handleStemChange = (e) => {\n    if (e.target.checked === true) {\n      setStem(true);\n    } else {\n      setStem(null);\n    }\n  };\n\n  const resetAll = (e) => {\n    e.preventDefault();\n    setResidency(null);\n    setEssay(null);\n    setTranscript(null);\n    setYear(null);\n    setStem(null);\n    document.getElementById(\"stem\").checked = false;\n    setSearchQuery(\"\");\n  };\n\n  return (\n    <>\n      <section className=\"ut-scholarship--grid\">\n        <ScholarshipFilters\n          searchquery={searchquery}\n          setSearchQuery={setSearchQuery}\n          stem={stem}\n          year={year}\n          transcript={transcript}\n          essay={essay}\n          residency={residency}\n          handleResidenceChange={handleResidenceChange}\n          handleEssayChange={handleEssayChange}\n          handleTranscriptChange={handleTranscriptChange}\n          handleYearChange={handleYearChange}\n          handleStemChange={handleStemChange}\n          resetAll={resetAll}\n        />\n        <div>\n          {scholarshipList.length > 0 ? (\n            <>\n              <div className=\"ut-scholarship--grid-results\">\n                {scholarshipList}\n              </div>\n              <Pagination\n                perPage={perPage}\n                totalScholarships={scholarships.length}\n                paginate={paginate}\n              />\n            </>\n          ) : (\n            <h2>Sorry, no results match that search</h2>\n          )}\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport axios from 'axios';\n\nconst DATA_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : `..${process.env.PUBLIC_URL}`;\n\naxios.get(`${DATA_URL}/data/data.json`)\n  .then( res =>\n    ReactDOM.render(\n      <React.StrictMode>\n        <App scholarships={res.data} />\n      </React.StrictMode>,\n      document.getElementById('yec-root')\n    )\n  )\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}