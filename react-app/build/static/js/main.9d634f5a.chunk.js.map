{"version":3,"sources":["components/Scholarship.js","components/ScholarshipFilters.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Scholarship","scholarship","useState","show","setShow","handleClose","capitalize","s","charAt","toUpperCase","slice","className","title","amount","deadline","Button","variant","onClick","Modal","onHide","centered","Header","closeButton","Title","Body","dangerouslySetInnerHTML","__html","information","website","target","href","rel","application_online_or_paper","essays","letters_of_recommendation","no_of_awards","texas_resident","transcripts","additional_info","Footer","YEAR_IN_SCHOOL_MAP","value","label","RESIDENCE_MAP","ESSAY_MAP","TRANSCRIPT_MAP","ScholarshipFilters","searchquery","setSearchQuery","year","transcript","essay","residency","handleResidenceChange","handleEssayChange","handleTranscriptChange","handleYearChange","handleStemChange","resetAll","htmlFor","type","id","placeholder","onChange","e","theme","borderRadius","colors","primary","primary25","primary50","neutral80","neutral70","neutral60","neutral50","neutral30","neutral20","options","isClearable","name","Pagination","perPage","totalScholarships","paginate","pageNumbers","i","Math","ceil","push","map","number","App","scholarships","setResidency","setEssay","setTranscript","setYear","stem","setStem","currentpage","setCurrentPage","indexOfLast","indexOfFirst","scholarshipList","filter","year_in_school","includes","keywords","toLowerCase","indexOf","sort","a","b","Date","getTime","index","console","log","checked","preventDefault","document","getElementById","length","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DATA_URL","process","axios","get","res","ReactDOM","render","StrictMode","data"],"mappings":"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","file":"static/js/main.9d634f5a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function Scholarship({ scholarship }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // Capitalize first letter of string\n  const capitalize = (s) => {\n    if (typeof s !== \"string\") return \"\";\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  return (\n    <div className=\"ut-scholarship--card\">\n      <h3>{scholarship.title}</h3>\n      {scholarship.amount ? (\n        <p className=\"ut-scholarship--card-award-amt\">\n          Award amount: {scholarship.amount}\n        </p>\n      ) : null}\n              {scholarship.deadline ? (\n                <p className=\"ut-scholarship--card-award-deadline\">\n                  <strong>Deadline:</strong> {scholarship.deadline }\n                </p>\n              ) : null}\n      <Button variant=\"primary\" onClick={handleShow}>\n        Read scholarship info\n      </Button>\n\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>{scholarship.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <>\n            <div\n              dangerouslySetInnerHTML={{ __html: scholarship.information }}\n            ></div>\n            <ul>\n              {scholarship.website[0] ? (\n                <li>\n                  <strong>Site:</strong>{\" \"}\n                  <a\n                    target=\"_blank\"\n                    href={scholarship.website[0]}\n                    rel=\"noindex, nofollow, noreferrer\"\n                  >\n                    <br />\n                    {scholarship.website[0]}\n                  </a>\n                </li>\n              ) : null}\n              {scholarship.application_online_or_paper[0] ? (\n                <li>\n                  <strong>Application (online or paper):</strong>\n                  <br />\n                  {capitalize(scholarship.application_online_or_paper[0])}\n                </li>\n              ) : null}\n              {scholarship.essays[0] ? (\n                <li>\n                  <strong>Essay required?:</strong>\n                  <br /> {capitalize(scholarship.essays[0])}\n                </li>\n              ) : null}\n              {scholarship.letters_of_recommendation[0] ? (\n                <li>\n                  <strong>Letter of recommendation?:</strong>\n                  <br />\n                  {capitalize(scholarship.letters_of_recommendation[0])}\n                </li>\n              ) : null}\n              {scholarship.no_of_awards[0] ? (\n                <li>\n                  <strong>Number of awards offered:</strong>\n                  <br />\n                  {scholarship.no_of_awards[0]}\n                </li>\n              ) : null}\n              {scholarship.texas_resident[0] ? (\n                <li>\n                  <strong>Requires Texas residency?:</strong>\n                  <br />\n                  {capitalize(scholarship.texas_resident[0])}\n                </li>\n              ) : null}\n              {scholarship.transcripts[0] ? (\n                <li>\n                  <strong>Requires transcript?:</strong>\n                  <br />\n                  {capitalize(scholarship.transcripts[0])}\n                </li>\n              ) : null}\n              {scholarship.additional_info[0] ? (\n                <div\n                  className=\"ut-scholarship--card-add-info\"\n                  dangerouslySetInnerHTML={{\n                    __html: scholarship.additional_info[0],\n                  }}\n                ></div>\n              ) : null}\n            </ul>\n            {/* { scholarship.year_in_school.map((year, index) => (\n              <div key={index}>{ year }</div>\n              ))\n            } */}\n          </>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Select from \"react-select\";\n\nconst YEAR_IN_SCHOOL_MAP = [\n  { value: \"9th\", label: \"9th grade\" },\n  { value: \"10th\", label: \"10th grade\" },\n  { value: \"11th\", label: \"11th grade\" },\n  { value: \"12th\", label: \"12th grade\" },\n];\n\nconst RESIDENCE_MAP = [\n  { value: \"yes\", label: \"Yes\" },\n  { value: \"no\", label: \"No\" },\n];\n\nconst ESSAY_MAP = [\n  { value: \"yes\", label: \"Yes\" },\n  { value: \"no\", label: \"No\" },\n];\n\nconst TRANSCRIPT_MAP = [\n  { value: \"yes\", label: \"Yes\" },\n  { value: \"no\", label: \"No\" },\n];\n\nexport default function ScholarshipFilters({ searchquery, setSearchQuery, year, transcript, essay, residency, handleResidenceChange, handleEssayChange, handleTranscriptChange, handleYearChange, handleStemChange, resetAll }) {\n  return (\n    <>\n      <form className=\"ut-scholarships--grid-form\">\n        <label htmlFor=\"searchquery\">Search</label>\n        <input\n          type=\"text\"\n          id=\"searchquery\"\n          placeholder=\"Enter search keyword\"\n          value={searchquery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n        <label htmlFor=\"residency\">Residency</label>\n        <Select\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#1f262b',\n              primary25: '#F2F4F5',\n              primary50: '#bf5700',\n              neutral80: '#1f262b',\n              neutral70: '#1f262b',\n              neutral60: '#1f262b',\n              neutral50: '#9CADB7',\n              neutral30: '#1f262b',\n              neutral20: '#9CADB7',\n            },\n          })}\n          options={RESIDENCE_MAP}\n          isClearable={true}\n          placeholder=\"Select residency status\"\n          onChange={(value) => handleResidenceChange(value)}\n          value={residency}\n          name=\"residency\"\n        />\n        <label htmlFor=\"essay\">Essay</label>\n        <Select\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#1f262b',\n              primary25: '#F2F4F5',\n              primary50: '#bf5700',\n              neutral80: '#1f262b',\n              neutral70: '#1f262b',\n              neutral60: '#1f262b',\n              neutral50: '#9CADB7',\n              neutral30: '#1f262b',\n              neutral20: '#9CADB7',\n            },\n          })}\n          options={ESSAY_MAP}\n          isClearable={true}\n          placeholder=\"Is an essay required?\"\n          onChange={(value) => handleEssayChange(value)}\n          value={essay}\n          name=\"essay\"\n        />\n        <label htmlFor=\"transcript\">Transript</label>\n        <Select\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#1f262b',\n              primary25: '#F2F4F5',\n              primary50: '#bf5700',\n              neutral80: '#1f262b',\n              neutral70: '#1f262b',\n              neutral60: '#1f262b',\n              neutral50: '#9CADB7',\n              neutral30: '#1f262b',\n              neutral20: '#9CADB7',\n            },\n          })}\n          options={TRANSCRIPT_MAP}\n          isClearable={true}\n          placeholder=\"Transcript required?\"\n          onChange={(value) => handleTranscriptChange(value)}\n          value={transcript}\n          name=\"transcript\"\n        />\n        <label htmlFor=\"year\">Year in School</label>\n        <Select\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#1f262b',\n              primary25: '#F2F4F5',\n              primary50: '#bf5700',\n              neutral80: '#1f262b',\n              neutral70: '#1f262b',\n              neutral60: '#1f262b',\n              neutral50: '#9CADB7',\n              neutral30: '#1f262b',\n              neutral20: '#9CADB7',\n            },\n          })}\n          options={YEAR_IN_SCHOOL_MAP}\n          isClearable={true}\n          placeholder=\"Select year in school\"\n          onChange={(value) => handleYearChange(value)}\n          value={year}\n          name=\"year\"\n        />\n        <label htmlFor=\"stem\">Stem scholarship</label>\n        <input\n          className=\"ut-checkbox\"\n          type=\"checkbox\"\n          id=\"stem\"\n          value=\"stem\"\n          onClick={handleStemChange}\n        />\n        <button onClick={resetAll}>Reset</button>\n      </form>\n    </>\n  );\n}\n","import React from 'react'\n\nexport default function Pagination({ perPage, totalScholarships, paginate }) {\n\n    const pageNumbers = []\n\n    for(let i = 1; i <= Math.ceil(totalScholarships / perPage); i++){\n        pageNumbers.push(i)\n    }\n\n    return (\n        <nav>\n            <ul className=\"ut-pagination\">\n                {pageNumbers.map(number => (\n                    <li key={number}>\n                        <a onClick={() => paginate(number)} href=\"!#\">{number}</a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    )\n}\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Scholarship from \"./components/Scholarship\";\nimport ScholarshipFilters from \"./components/ScholarshipFilters\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App({ scholarships }) {\n  const [residency, setResidency] = useState();\n  const [essay, setEssay] = useState();\n  const [transcript, setTranscript] = useState();\n  const [year, setYear] = useState();\n  const [stem, setStem] = useState();\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Pagination\n  const [currentpage, setCurrentPage] = useState(1);\n  const [perPage] = useState(10);\n\n  const indexOfLast = currentpage * perPage;\n  const indexOfFirst = indexOfLast - perPage;\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const scholarshipList = scholarships\n    .slice(indexOfFirst, indexOfLast)\n    .filter((scholarship) => (!stem ? scholarship : scholarship.stem[0] === stem ))\n    .filter((scholarship) =>\n      !residency ? scholarship : scholarship.texas_resident[0] === residency.value\n    )\n    .filter((scholarship) =>\n      !essay ? scholarship : scholarship.essays[0] === essay.value\n    )\n    .filter((scholarship) =>\n      !transcript ? scholarship : scholarship.transcripts[0] === transcript.value\n    )\n    .filter((scholarship) =>\n      !year ? scholarship : scholarship.year_in_school[0].includes(year.value)\n    )\n    .filter(\n      (scholarship) =>\n        scholarship.keywords[0].toLowerCase().indexOf(searchquery) > -1\n    )\n    .sort((a,b) => {\n      return new Date(a.deadline).getTime() -\n          new Date(b.deadline).getTime()\n    })\n    .map((scholarship, index) => (\n      <Scholarship key={index} scholarship={scholarship} />\n    ));\n\n  const handleResidenceChange = (value) => {\n    if (value != null) {\n      setResidency(value);\n    } else {\n      setResidency(null);\n    }\n  };\n\n  const handleEssayChange = (value) => {\n    if (value != null) {\n      setEssay(value);\n    } else {\n      setEssay(null);\n    }\n  };\n\n  const handleTranscriptChange = (value) => {\n    if (value != null) {\n      setTranscript(value);\n    } else {\n      setTranscript(null);\n    }\n  };\n\n  const handleYearChange = (value) => {\n    if (value != null) {\n      setYear(value);\n    } else {\n      setYear(null);\n    }\n  };\n\n  const handleStemChange = (e) => {\n    console.log(e.target.checked)\n    if (e.target.checked === true) {\n      setStem(\"1\");\n    } else {\n      setStem(null);\n    }\n  };\n\n  const resetAll = (e) => {\n    e.preventDefault();\n    setResidency(null);\n    setEssay(null);\n    setTranscript(null);\n    setYear(null);\n    setStem(null);\n    document.getElementById(\"stem\").checked = false;\n    setSearchQuery(\"\");\n  };\n\n  return (\n    <>\n      <section className=\"ut-scholarship--grid\">\n        <ScholarshipFilters\n          searchquery={searchquery}\n          setSearchQuery={setSearchQuery}\n          stem={stem}\n          year={year}\n          transcript={transcript}\n          essay={essay}\n          residency={residency}\n          handleResidenceChange={handleResidenceChange}\n          handleEssayChange={handleEssayChange}\n          handleTranscriptChange={handleTranscriptChange}\n          handleYearChange={handleYearChange}\n          handleStemChange={handleStemChange}\n          resetAll={resetAll}\n        />\n        <div>\n          {scholarshipList.length > 0 ? (\n            <>\n              <div className=\"ut-scholarship--grid-results\">\n                {scholarshipList}\n              </div>\n              <Pagination\n                perPage={perPage}\n                totalScholarships={scholarships.length}\n                paginate={paginate}\n              />\n            </>\n          ) : (\n            <h2>Sorry, no results match that search</h2>\n          )}\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport axios from 'axios';\n\nconst DATA_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : `..${process.env.PUBLIC_URL}`;\n\naxios.get(`${DATA_URL}/data/data.json`)\n  .then( res =>\n    ReactDOM.render(\n      <React.StrictMode>\n        <App scholarships={res.data} />\n      </React.StrictMode>,\n      document.getElementById('yec-root')\n    )\n  )\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}